ext {
    ext {
        // database dsl query language. cooperate with hibernate
        queryDSLVersion = "3.7.0"
        // AOL lambda utils
        cyclopsVersion='7.1.0'
        // enahnce user type for hibernate
        jadiraVersion='5.0.0.GA'
        // for date time calculation
        lammaVersion='2.3.0'
        // for data migration
        flywayVersion='3.2.1'
    }
}

buildscript {
    repositories {
        mavenLocal()
        maven { url "http://btciservice.bluetechnology.com.tw:8280/nexus/content/groups/public/" }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies { classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.5" }
}

apply plugin: "com.ewerk.gradle.plugins.querydsl"

dependencies {

    compile "org.flywaydb:flyway-core:$flywayVersion"
    compile "org.jadira.usertype:usertype.extended:$jadiraVersion"

    compile "com.mysema.querydsl:querydsl-jpa:$queryDSLVersion"

    compile "com.aol.cyclops:cyclops-all:${cyclopsVersion}"

    //Date process
    compile "io.lamma:lamma_2.11:${lammaVersion}"
}

jar {
    baseName = 'khub-admin-core'
    manifest {
        name = 'khub-admin-core'
        instruction 'Bundle-Vendor', 'Claridy'
        instruction 'Bundle-DocURL', ''
        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*'
        instruction 'Eclipse-ExtensibleAPI', 'true'
        instruction 'Embed-Dependency', '*;scope=compile'
    }
}

checkstyle {
    sourceSets = [sourceSets.main]
}

findbugs {
    sourceSets = [sourceSets.main]
}

sourceSets {
    generated {
        java { srcDirs = ['src/querydsl/java']}
    }
}

querydsl {
    library = "com.mysema.querydsl:querydsl-apt:${queryDSLVersion}"
    querydslSourcesDir = "src/querydsl/java"
    jpa = true
}

//使用PMD、Checkstyle、FindBug時排除QueryDSL Generated Java File
def excludePattern = 'src/generated/querydsl/'
def excludePatternAntStyle = excludePattern + '*'
//tasks.withType(FindBugs) {
//    classes = classes.filter {
//        !it.path.contains(excludePattern)
//    }
//}
tasks.withType(Checkstyle) { exclude excludePatternAntStyle }
tasks.withType(Pmd) { exclude excludePatternAntStyle }

